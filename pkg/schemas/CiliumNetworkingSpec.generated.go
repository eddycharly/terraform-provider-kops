package schemas

import (
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

func CiliumNetworkingSpec() *schema.Resource {
	return &schema.Resource{
		Schema: map[string]*schema.Schema{
			"version":                           OptionalString(),
			"access_log":                        OptionalString(),
			"agent_labels":                      OptionalList(String()),
			"agent_prometheus_port":             OptionalInt(),
			"allow_localhost":                   OptionalString(),
			"auto_ipv_6node_routes":             OptionalBool(),
			"bpf_root":                          OptionalString(),
			"container_runtime":                 OptionalList(String()),
			"container_runtime_endpoint":        OptionalMap(String()),
			"debug":                             OptionalBool(),
			"debug_verbose":                     OptionalList(String()),
			"device":                            OptionalString(),
			"disable_conntrack":                 OptionalBool(),
			"disable_ipv_4":                     OptionalBool(),
			"disable_k8s_services":              OptionalBool(),
			"enable_policy":                     OptionalString(),
			"enable_tracing":                    OptionalBool(),
			"enable_prometheus_metrics":         OptionalBool(),
			"envoy_log":                         OptionalString(),
			"ipv_4cluster_cidr_mask_size":       OptionalInt(),
			"ipv_4node":                         OptionalString(),
			"ipv_4range":                        OptionalString(),
			"ipv_4service_range":                OptionalString(),
			"ipv_6cluster_alloc_cidr":           OptionalString(),
			"ipv_6node":                         OptionalString(),
			"ipv_6range":                        OptionalString(),
			"ipv_6service_range":                OptionalString(),
			"k8s_api_server":                    OptionalString(),
			"k8s_kubeconfig_path":               OptionalString(),
			"keep_bpf_templates":                OptionalBool(),
			"keep_config":                       OptionalBool(),
			"label_prefix_file":                 OptionalString(),
			"labels":                            OptionalList(String()),
			"lb":                                OptionalString(),
			"lib_dir":                           OptionalString(),
			"log_drivers":                       OptionalList(String()),
			"log_opt":                           OptionalMap(String()),
			"logstash":                          OptionalBool(),
			"logstash_agent":                    OptionalString(),
			"logstash_probe_timer":              OptionalInt(),
			"disable_masquerade":                OptionalBool(),
			"nat_46range":                       OptionalString(),
			"pprof":                             OptionalBool(),
			"prefilter_device":                  OptionalString(),
			"prometheus_serve_addr":             OptionalString(),
			"restore":                           OptionalBool(),
			"single_cluster_route":              OptionalBool(),
			"socket_path":                       OptionalString(),
			"state_dir":                         OptionalString(),
			"trace_payload_len":                 OptionalInt(),
			"tunnel":                            OptionalString(),
			"enable_ipv_6":                      OptionalBool(),
			"enable_ipv_4":                      OptionalBool(),
			"monitor_aggregation":               OptionalString(),
			"bpfct_global_tcp_max":              OptionalInt(),
			"bpfct_global_any_max":              OptionalInt(),
			"preallocate_bpf_maps":              OptionalBool(),
			"sidecar_istio_proxy_image":         OptionalString(),
			"cluster_name":                      OptionalString(),
			"to_fqdns_dns_reject_response_code": OptionalString(),
			"to_fqdns_enable_poller":            OptionalBool(),
			"container_runtime_labels":          OptionalString(),
			"ipam":                              OptionalString(),
			"ip_tables_rules_noinstall":         OptionalBool(),
			"auto_direct_node_routes":           OptionalBool(),
			"enable_node_port":                  OptionalBool(),
			"etcd_managed":                      OptionalBool(),
			"enable_remote_node_identity":       OptionalBool(),
			"remove_cbr_bridge":                 OptionalBool(),
			"restart_pods":                      OptionalBool(),
			"reconfigure_kubelet":               OptionalBool(),
			"node_init_bootstrap_file":          OptionalString(),
			"cni_bin_path":                      OptionalString(),
		},
	}
}
