package schemas

import (
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

func Cluster() *schema.Resource {
	return &schema.Resource{
		Schema: map[string]*schema.Schema{
			"name":                              RequiredString(),
			"admin_ssh_key":                     Sensitive(RequiredString()),
			"channel":                           OptionalString(),
			"addons":                            OptionalList(AddonSpec()),
			"config_base":                       OptionalComputedString(),
			"cloud_provider":                    RequiredString(),
			"container_runtime":                 OptionalString(),
			"kubernetes_version":                OptionalString(),
			"subnet":                            RequiredList(ClusterSubnetSpec()),
			"project":                           OptionalString(),
			"master_public_name":                OptionalComputedString(),
			"master_internal_name":              OptionalComputedString(),
			"network_cidr":                      OptionalComputedString(),
			"additional_network_cidrs":          OptionalList(String()),
			"network_id":                        RequiredString(),
			"topology":                          RequiredStruct(TopologySpec()),
			"secret_store":                      OptionalString(),
			"key_store":                         OptionalString(),
			"config_store":                      OptionalString(),
			"dns_zone":                          OptionalString(),
			"additional_sans":                   OptionalList(String()),
			"cluster_dns_domain":                OptionalString(),
			"service_cluster_ip_range":          OptionalString(),
			"pod_cidr":                          OptionalString(),
			"non_masquerade_cidr":               OptionalComputedString(),
			"ssh_access":                        OptionalList(String()),
			"node_port_access":                  OptionalList(String()),
			"egress_proxy":                      OptionalStruct(EgressProxySpec()),
			"ssh_key_name":                      OptionalString(),
			"kubernetes_api_access":             OptionalList(String()),
			"isolate_masters":                   OptionalBool(),
			"update_policy":                     OptionalString(),
			"external_policies":                 OptionalMap(List(String())),
			"additional_policies":               OptionalMap(String()),
			"file_assets":                       OptionalList(FileAssetSpec()),
			"etcd_cluster":                      RequiredList(EtcdClusterSpec()),
			"containerd":                        OptionalStruct(ContainerdConfig()),
			"docker":                            OptionalStruct(DockerConfig()),
			"kube_dns":                          OptionalStruct(KubeDNSConfig()),
			"kube_api_server":                   OptionalStruct(KubeAPIServerConfig()),
			"kube_controller_manager":           OptionalStruct(KubeControllerManagerConfig()),
			"external_cloud_controller_manager": OptionalStruct(CloudControllerManagerConfig()),
			"kube_scheduler":                    OptionalStruct(KubeSchedulerConfig()),
			"kube_proxy":                        OptionalStruct(KubeProxyConfig()),
			"kubelet":                           OptionalStruct(KubeletConfigSpec()),
			"master_kubelet":                    OptionalStruct(KubeletConfigSpec()),
			"cloud_config":                      OptionalStruct(CloudConfiguration()),
			"external_dns":                      OptionalStruct(ExternalDNSConfig()),
			"networking":                        RequiredStruct(NetworkingSpec()),
			"api":                               OptionalStruct(AccessSpec()),
			"authentication":                    OptionalStruct(AuthenticationSpec()),
			"authorization":                     OptionalStruct(AuthorizationSpec()),
			"node_authorization":                OptionalStruct(NodeAuthorizationSpec()),
			"cloud_labels":                      OptionalMap(String()),
			"hooks":                             OptionalList(HookSpec()),
			"assets":                            OptionalStruct(Assets()),
			"iam":                               OptionalComputedStruct(IAMSpec()),
			"encryption_config":                 OptionalBool(),
			"disable_subnet_tags":               OptionalBool(),
			"use_host_certificates":             OptionalBool(),
			"sysctl_parameters":                 OptionalList(String()),
			"rolling_update":                    OptionalStruct(RollingUpdate()),
			"instance_group":                    RequiredList(InstanceGroup()),
			"kube_config":                       ComputedStruct(KubeConfig()),
			"rolling_update_options":            OptionalStruct(RollingUpdateOptions()),
		},
	}
}
